name: Deploy CV Online

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node-modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: node-modules-

      - name: Install Dependencies
        run: |
          if [ -e package-lock.json ]; then
            npm i
          else
            npm ci
          fi

      - name: Run Linter
        run: npm run lint

      - name: Build App locally
        run: npm run build

      - name: Setup SSH Keys and known_hosts
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_DEPLOY_KEY }}" > ~/.ssh/github_rsa
          chmod 600 ~/.ssh/github_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/github_rsa

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            set -e

            rm -rf ~/portfolio_backup_*

            if [ -d ~/portfolio ]; then
              mv ~/portfolio ~/portfolio_backup_$(date +%s)
            fi

            if [ ! -d ~/portfolio ]; then
              git clone git@github.com:19521791/CV.git ~/portfolio
            fi

            cd ~/portfolio
            git pull origin main
            npm install

            rm -rf dist
            
            if ! npm run build; then
              echo "Build failed! Rolling back..."
              rm -rf ~/portfolio
              mv ~/portfolio_backup_* ~/portfolio
              exit 1
            fi

            sudo mkdir -p /var/www/portfolio

            sudo rm -rf /var/www/portfolio/dist

            sudo cp -r ~/portfolio/dist /var/www/portfolio/

            sudo chown -R www-data:www-data /var/www/portfolio/dist

            sudo chmod -R 755 /var/www/portfolio/dist
            
            if command -v nginx &> /dev/null; then
              sudo nginx -t && sudo systemctl restart nginx
            else
              echo "Nginx not found!"
              exit 1
            fi

      - name: Clean up SSH keys
        run: rm -rf ~/.ssh/github_rsa

      - name: Notify Telegram on Success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Deploy to production successfully!

            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{ github.sha }}

      - name: Notify Telegram on Failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Deploy to production failed!

            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}



